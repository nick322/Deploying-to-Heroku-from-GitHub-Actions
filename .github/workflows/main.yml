# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Deploy to Heroku
        # You may pin to the exact commit or the version.
        # uses: AkhileshNS/heroku-deploy@79ef2ae4ff9b897010907016b268fd0f88561820
        uses: AkhileshNS/heroku-deploy@v3.12.12
        with:
          # This will be used for authentication. You can find it in your heroku homepage account settings
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          # Email that you use with heroku
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          # The appname to use for deploying/updating
          heroku_app_name: deploying-from-github

          procfile: 'web: vendor/bin/heroku-php-nginx public/'
          
          env_file: '.env.example'

      - name: Copy .env
        run: heroku run -a deploying-from-github -- mv .env.example .env

      # - name: Load env & Cache config & Cache route  
      #   run: |
      #     sed -i 's/APP_ENV=local/APP_ENV=dev/g' .env
      #     sed -i 's/APP_KEY=/APP_KEY=${{ secrets.APP_KEY }}/g' .env`
      #     php artisan config:cache
      #     php artisan route:cache
      
       